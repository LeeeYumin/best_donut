<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.orders.mapper.OrdersMapper">
	
	<!-- 1. 주문 -->
	
	<!-- 거래처 조회 -->
	<select id="getCompany" resultType="map">
		SELECT company_code   AS "companyCode"
		       , company_name AS "companyName"
		  FROM company
		 WHERE company_sep = '완제품'	
	</select>
	
	<!-- 주문조회 -->
	<select id="getOrders" resultType="OrdersVO">
		WITH t AS 
		    (
		    SELECT o.orders_code         AS ocode
		           , MAX(p.product_name) AS prod
		           , COUNT(*)            AS cnt
		      FROM orders o JOIN orders_detail d
		                      ON o.orders_code = d.orders_code
		                    JOIN product p
		                      ON d.product_code = p.product_code
		     GROUP BY o.orders_code
		    )
		SELECT o.orders_code
		       , o.orders_date
		       , o.due_date
		       , o.total_orders_price
		       , o.orders_status
		       , c.company_name
		       , u.users_name
		       , CASE WHEN t.cnt = 1 THEN t.prod
		              ELSE t.prod || ' 외 ' || CAST(t.cnt - 1 AS VARCHAR(20)) || '건' 
		         END AS cnt_str
		  FROM orders o  JOIN company c
		                   ON o.company_code = c.company_code
		                 JOIN users u
		                   ON o.users_code = u.users_code
		                 JOIN t
		                   ON o.orders_code = t.ocode
		 WHERE 1=1
			<if test="ordersCode != null and ordersCode != ''">
				AND o.orders_code LIKE '%' || #{ordersCode} || '%'
			</if>
			<if test="companyCode != null and companyCode != ''">
				AND o.company_code = #{companyCode}
			</if>
			<if test="dueStartDate != null">
				AND TRUNC(o.due_date) <![CDATA[ >= ]]> TRUNC(#{dueStartDate})
			</if>
			<if test="dueEndDate != null">
				AND TRUNC(o.due_date) <![CDATA[ <= ]]> TRUNC(#{dueEndDate})
			</if>
			<if test="ordersStartDate != null">
				AND TRUNC(o.orders_date) <![CDATA[ >= ]]> TRUNC(#{ordersStartDate})
			</if>
			<if test="ordersEndDate != null">
				AND TRUNC(o.orders_date) <![CDATA[ <= ]]> TRUNC(#{ordersEndDate})
			</if>
		 ORDER BY 1
	</select>

	<!-- 주문상세목록 조회 -->
	<select id="getOrdersDetail" resultType="OrdersDetailVO" parameterType="String">
		SELECT d.orders_detail_code
		       , d.orders_cnt
			   , d.supply_price
			   , d.tax
			   , d.total_supply_price
			   , d.orders_code
			   , d.product_code
			   , p.product_name
		  FROM orders_detail d JOIN product p
		    ON d.product_code = p.product_code
		 WHERE d.orders_code = #{ordersCode}
		 ORDER BY 1
	</select>
	
	<!-- 주문 등록 -->
	<insert id="insertOrders" parameterType="OrdersVO">
		<!--
		selectKey : insert하고 난 후 자동 생성된 key값 받아서
					다른 insert문에 바로 사용
		 -->
		<selectKey keyProperty="ordersCode" order="BEFORE" resultType="String">
		 	SELECT seq_func('orders') FROM dual
		</selectKey>		
		INSERT INTO orders
			(
				orders_code
				, orders_date
				, due_date
				, total_orders_price
				, orders_status
				, users_code
				, company_code
			)
		VALUES 
			(
				 #{ordersCode}
				, #{ordersDate}
				, #{dueDate}
				, #{totalOrdersPrice}
				, 'OP1'
				, 'USE00002'
				, #{companyCode}
			)
	</insert>
	
	<!-- 주문상세 등록 -->
	<insert id="insertOrdDet" parameterType="OrdersDetailVO">	
		INSERT INTO orders_detail
			(
				orders_detail_code
				, orders_cnt
				, supply_price
				, tax
				, total_supply_price
				, orders_code
				, product_code
			)
		VALUES
			(
				seq_func('orders_detail')
				, #{ordersCnt}
				, #{supplyPrice}
				, #{tax}
				, #{totalSupplyPrice}
				, #{ordersCode}
				, #{productCode}
			)
	</insert>
	
	
	<!-- 2. 생산요청 -->
	
	<!-- 생산요청 등록 -->
	<insert id="insertProdReq" parameterType="ProdReqVO">
		<selectKey keyProperty="prodReqCode" order="BEFORE" resultType="String">
			SELECT seq_func('prod_req') FROM dual
		</selectKey>
	  	INSERT INTO prod_req
			(
				prod_req_code
				, total_req_cnt
				, req_date
				, users_code
				, prod_req_status
			)
		VALUES
			(
				#{prodReqCode}
				, #{totalReqCnt}
				, #{reqDate}
				, 'USE00002'
				, 'RS1'
			)
	</insert>
	
	<!-- 생산요청상세 등록 -->
	<insert id="insertProdReqDet" parameterType="ProdReqDetailVO">
		INSERT INTO prod_req_detail
			(
				prod_req_detail_code
				, req_cnt
				, prod_req_code
				, product_code
			)
		VALUES
			(
				seq_func('prod_req_detail')
				, #{reqCnt}
				, #{prodReqCode}
				, #{productCode}
			)
	</insert>
	
</mapper>