<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.product.mapper.ProductMapper">
	
	<!-- 제품조회(주문등록 페이지) -->
	<select id="getProduct" resultType="ProductVO">
		WITH t AS 
			(
		    SELECT p.product_code
		           , NVL(SUM(d.orders_cnt), 0) total_orders_cnt
		    FROM   product p LEFT OUTER JOIN orders_detail d
		                     ON p.product_code = d.product_code
		    GROUP BY p.product_code
			)
		SELECT p.product_code
		       , p.product_name
		       , p.unit_price
		       , p.stock_cnt
		       , p.safe_stock_cnt
		       , t.total_orders_cnt
		  FROM t JOIN product p
		           ON t.product_code = p.product_code       
		 ORDER BY 1
	</select>
	
	<!-- 제품조회(생산요청 페이지)-->
	<select id="getReqProd" resultType="ProductVO">
		WITH t AS 
		    (
		    SELECT d.product_code
		           , SUM(d.orders_cnt) cnt
		      FROM orders_detail d JOIN orders o
		                           ON o.orders_code = d.orders_code
		     WHERE 1=1
		     <if test="dueStartDate != null">
		     	AND o.due_date <![CDATA[ >= ]]> #{dueStartDate}
		     </if>
		     <if test="dueEndDate != null">
			 	AND o.due_date <![CDATA[ <= ]]> #{dueEndDate}
			 </if>
		     GROUP BY d.product_code
		    )
		SELECT p.product_code
		       , p.product_name
		       , p.unit_price
		       , p.stock_cnt
		       , p.safe_stock_cnt
		       , NVL(t.cnt, '0') total_orders_cnt
		  FROM t RIGHT OUTER JOIN product p
		           ON t.product_code = p.product_code
		 ORDER BY 1
	</select>
	
	<!-- 완제품조회 -->
	<select id="getProdDet" resultType="ProductDetailVO">
		SELECT d.product_lot_code
		       , d.warehousing_cnt
		       , d.check_done_cnt
		       , d.delivery_cnt
		       , d.remain_cnt
		       , d.qlty_check_status
		       , d.product_status
		       , d.dump_date
		       , d.product_code
		       , d.proc_result_code
		       , p.product_name
		  FROM product_detail d JOIN product p
		                          ON d.product_code = p.product_code
         WHERE 1=1
        <if test="productLotCode != null and productLotCode != ''">
			AND d.product_lot_code LIKE '%' || #{productLotCode} || '%'
		</if>
        <if test="productName != null and productName != ''">
			AND d.product_name LIKE '%' || #{productName} || '%'
		</if>	
	</select>
	
	<!-- 완제품LOT조회 -->
	<select id="getProdLot" resultType="ProductDetailVO">
		SELECT d.product_lot_code
			   , d.product_code
		       , d.check_done_cnt
		       , d.delivery_cnt
		       , d.remain_cnt
		       , d.qlty_check_status
		       , d.proc_result_code
		       , r.all_end_time
		  FROM product_detail d JOIN proc_result r
		                          ON d.proc_result_code = r.proc_result_code
		 WHERE d.product_code = #{productCode}
		   AND d.qlty_check_status = 'PQ2'
	</select>
	
	<!-- 완제품출고등록 -->
	<insert id="insertInout" parameterType="ProductInoutVO">
		INSERT INTO product_inout_history
		    (
		        product_inout_code
		        , inout_sep
		        , inout_cnt
		        , inout_date
		        , product_lot_code
		        , orders_detail_code
		        , prod_req_detail_code
		        , users_code
		    )
		VALUES
		    (
				seq_func(' product_inout_history')
				, 'IO2'
				, #{inoutCnt}
				, #{inoutDate}
				, #{productLotCode}
				, #{ordersDetailCode}
				, #{prodReqDetailCode}
				, #{usersCode}
		    )
	</insert>

</mapper>