<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.materials.mapper.MaterialsMapper">
   	<select id="getMaterials" resultType="MaterialVO" parameterType="String">   
		SELECT mat_code, 
               mat_name,
               stock_cnt,
               safe_stock_cnt,
               main_company_code,
               unit_price,
               unit
          FROM mat
         WHERE 1=1
         
      <!-- 검색 조건 -->
      <if test="matName != null and matName != ''">
		   AND mat_name LIKE '%'||#{matName}||'%'         
      </if>
      ORDER BY mat_code
   	</select>

   	<select id="getMaterialDetails" resultType="MaterialReadVO" parameterType="String">
		SELECT d.mat_lot_code,
               d.warehousing_cnt,
               d.check_done_cnt,
               d.out_cnt,
               d.remain_cnt,
               d.exp_date,
               d.qlty_check_status,
               d.mat_status,
               d.dump_date,
               d.unit_price,
               d.mat_code,
               d.company_code,
               m.mat_name
  	      FROM mat_detail d 
  	      JOIN mat m ON d.mat_code = m.mat_code
	     WHERE d.mat_code = #{matCode} 
   	</select>
   
   <!-- 폐기 처리 -> 재고도 업데이트 해줘야 함(나중에 꼭 하기 ★) -->
   	<update id="updateMatStatus" parameterType="String">
   		UPDATE mat_detail
		   SET mat_status = 'MSN'
		   
		<if test="matLotCodes != null and matLotCodes.length > 0">
         WHERE mat_lot_code IN
        	<foreach collection="matLotCodes" item="matLotCode" open="(" close=")" separator=",">
         		#{matLotCode}
        	</foreach>
      	</if>
   	</update>
   	
   	<!-- 자재 발주 등록 -->
   	<insert id="insertMatOrders" parameterType="MaterialOrderVO">
	   	<selectKey keyProperty="matOrdersCode" order="BEFORE" resultType="String">
			SELECT seq_func('mat_orders') FROM dual
		</selectKey>
		INSERT INTO mat_orders
			(
				mat_orders_code,
			    prod_plan_code,
			    mat_total_orders_price
			)
		VALUES 
			(
				 #{matOrdersCode},
			     #{prodPlanCode},
			     #{matTotalOrdersPrice}
			)	
   	</insert>
	
	<!-- 자재 발주 상세 등록 -->
	<insert id="insertMatOrdersDetail" parameterType="MaterialOrderDetailVO">
		INSERT INTO mat_orders_detail
			(
				mat_orders_detail_code,
			    orders_cnt,
			    mat_orders_code,
			    mat_code,
			    company_code,
			    mat_orders_price
			)
		VALUES
			(
				seq_func('mat_orders_detail'),
			    #{ordersCnt},
			    #{matOrdersCode},
			    #{matCode},
			    #{mainCompanyCode},
			    #{matOrdersPrice}
			)
	</insert>
	
   	<!-- 자재 발주 관리 -->
   	<select id="getMaterialOrders" resultType="MaterialOrderVO">
		SELECT o.orders_date,
               o.mat_orders_code,
               u.users_name,
               o.mat_total_orders_price,
               o.total_orders_status
   		  FROM mat_orders o
     	  JOIN users u ON o.users_code= u.users_code
     	  	<where>
				<if test="sDate != null">
					TRUNC(o.orders_date) <![CDATA[ >= ]]> TRUNC(#{sDate})
				</if>
				<if test="eDate != null">
					AND TRUNC(o.orders_date) <![CDATA[ <= ]]> TRUNC(#{eDate})
				</if>
				<if test="ordersStatus != null and ordersStatus != ''">
					AND o.total_orders_status = #{ordersStatus}
				</if>
			</where>
     	  ORDER BY o.orders_date DESC
   	</select>		
		
	<!-- 발주 상세 목록 -->
   	<select id="getMaterialOrderDetail" resultType="MaterialOrderDetailVO" parameterType="String">
		WITH s AS (SELECT m.mat_code,
                          m.mat_name,
                          o.orders_date + m.lead_time due_date
                     FROM mat_orders o 
                     JOIN mat_orders_detail d ON o.mat_orders_code=d.mat_orders_code
                     JOIN mat m ON m.mat_code=d.mat_code)
        
		SELECT DISTINCT o.orders_date,
                        c.company_name,
                        c.owner_name,
                        s.mat_name,
                        d.orders_cnt,
                        md.unit_price,
                        d.mat_orders_price,
                        s.due_date,
                        (SELECT FIND_USERSNAME(o.users_code) FROM dual) users_name
                        
	  			   FROM mat_orders_detail d
	  			   JOIN mat_orders o  ON o.mat_orders_code = d.mat_orders_code
			  	   JOIN s ON s.mat_code = d.mat_code
			  	   JOIN mat_detail md ON md.mat_code = d.mat_code
			  	   JOIN company c ON c.company_code = d.company_code
			  	   
               	<if	test="matOrderCodes != null and matOrderCodes.length > 0">
				  WHERE d.mat_orders_code IN
				<foreach collection="matOrderCodes" item="matOrdersCode" open="(" close=")" separator=",">
				#{matOrdersCode}
				</foreach>
				</if>
   	</select>
   	
   	<!-- 발주 취소 못하는 상태로 스케줄러로 변경 발주테이블 -->
   	<update id="updateMatOrderStatus" parameterType="String">
   		UPDATE mat_orders
		   SET total_orders_status = 'OSN'
		 WHERE (sysdate - orders_date) * 24 >= 1
		   AND total_orders_status = 'OSP'
   	</update>
   	
   	<!-- 발주 취소 못하는 상태로 스케줄러로 변경 발주상세테이블 -->
   	<update id="updateMatOrdersDetailStatus" parameterType="String">
   		UPDATE mat_orders
		   SET total_orders_status = 'OSN'
		 WHERE (sysdate - orders_date) * 24 >= 1
		   AND total_orders_status = 'OSP'
   	</update>
   	
   	<!-- 발주 취소 상태 변경 -->
   	<update id="updateMatOrderCancel" parameterType="String">
   		UPDATE mat_orders
		   SET total_orders_status = 'OSC'
		
		<if test="matOrderCodes != null and matOrderCodes.length > 0">
         WHERE mat_orders_code IN
        	<foreach collection="matOrderCodes" item="matOrderCode" open="(" close=")" separator=",">
         		#{matOrderCode}
        	</foreach>
      	</if>
   	</update>
   	
   	<!-- 입고 목록 테이블 출력 -->
   	<select id="getWarehousingList" resultType="MaterialWarehousingVO">
   		SELECT d.mat_orders_code,
       		   c.company_name,
       		   m.mat_name,
       		   d.orders_cnt,
       		   o.orders_date,
       		   o.orders_date + m.lead_time as due_date
  		  FROM mat_orders_detail d
     		JOIN company c ON d.company_code=c.company_code
    		JOIN mat m ON d.mat_code=m.mat_code
    		JOIN mat_orders o ON d.mat_orders_code=o.mat_orders_code
   		 WHERE d.orders_status='OSN'
	  ORDER BY d.mat_orders_code
   	</select>
   	
</mapper>